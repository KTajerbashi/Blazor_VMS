@page "/Security/SignUp"
@using Blazor_Application_Library.Models.Security

@using Blazor_Application_Library.Repositories.Security
@layout PublicLayout
<PageTitle>ثبت نام</PageTitle>
@inject IUserService service
@inject NavigationManager Router

<div class="container">
    <div class="row d-flex flex-wrap align-content-center justify-content-center">
        <div class="col-10">
            <div class="alert alert-primary border-primary shadow rounded-5 text-center m-3 h4">
                به صفحه ورود سیستم مدیریت محتوا خوش آمدید
            </div>
        </div>
        <div class="col-sm-10 col-md-10 col-lg-6">
            @if (Messages != null)
            {
                <div class="alert alert-danger border-danger shadow rounded-5 text-center ">
                    @Messages
                </div>
            }
            @* <EditForm EditContext="editContext" Model=@Model OnValidSubmit=@FormSubmitted> *@
            <EditForm Model=@Model OnValidSubmit="@FormSubmitted">
                <DataAnnotationsValidator />
                @* <ValidationSummary /> *@
                <div class="card gradient-custom text-white">
                    <div class="card-body p-5 text-center mb-1">
                        <div class="d-flex flex-row flex-wrap justify-content-around mb-2">
                            <div class="form-outline form-white textRight w-50 p-1">
                                <label class="form-label h5" for="Name">نام</label>
                                <InputText @bind-Value="Model!.Name" class="form-control " />
                                <ValidationMessage class="text-danger" For="@(() => Model!.Name)" />
                            </div>
                            <div class="form-outline form-white textRight w-50 p-1">
                                <label class="form-label h5" for="Family">فامیل</label>
                                <InputText @bind-Value="Model!.Family" class="form-control " />
                                <ValidationMessage class="text-danger" For="@(() => Model!.Family)" />
                            </div>
                            <div class="form-outline form-white textRight w-50 p-1">
                                <label class="form-label  h5" for="Email">ایمیل</label>
                                <InputText @bind-Value="Model!.Email" class="form-control " />
                                <ValidationMessage class="text-danger" For="@(() => Model!.Email)" />
                            </div>
                            <div class="form-outline form-white textRight w-50 p-1">
                                <label class="form-label h5 " for="Phone">تلفن</label>
                                <InputText @bind-Value="Model!.Phone" class="form-control " />
                                <ValidationMessage class="text-danger" For="@(() => Model!.Phone)" />
                            </div>
                            <div class="form-outline form-white textRight w-100 p-1">
                                <label class="form-label h5 " for="UserName">نام کاربری</label>
                                <InputText @bind-Value="Model!.UserName" class="form-control " />
                                <ValidationMessage class="text-danger" For="@(() => Model!.UserName)" />
                            </div>
                            <div class="form-outline form-white textRight w-50 p-1">
                                <label class="form-label h5 " for="Password">رمز کاربری</label>
                                <InputText type="password" @bind-Value="Model!.Password" class="form-control" />
                                <ValidationMessage class="text-danger" For="@(() => Model!.Password)" />
                            </div>
                            <div class="form-outline form-white textRight w-50 p-1">
                                <label class="form-label h5 " for="PasswordConfirmation">تکرار رمز</label>
                                <InputText type="password" @bind-Value="Model!.PasswordConfirmation" class="form-control " />
                                <ValidationMessage class="text-danger" For="@(() => Model!.PasswordConfirmation)" />
                            </div>
                        </div>
                        <button data-mdb-button-init data-mdb-ripple-init class="btn btn-outline-light btn-lg px-5" type="submit">ثبت نام</button>
                    </div>
                    <div>
                        <p class="mb-3">
                            <a href="/Security/Login" class="text-white-50 fw-bold">صفحه ورود</a>
                        </p>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>


@code {
    private EditContext? editContext;
    string Messages = null;

    [SupplyParameterFromForm]
    public SignUpDTO? Model { get; set; }

    private ValidationMessageStore? messageStore;

    protected override void OnInitialized()
    {
        Model ??= new();
        // editContext = new(Model);
        // editContext.OnValidationRequested += HandleValidationRequested;
        // messageStore = new(editContext);
    }

    private void HandleValidationRequested(object? sender,
        ValidationRequestedEventArgs args)
    {
        messageStore?.Clear();

        // Custom validation logic
        if (!Model!.IsActive)
        {
            messageStore?.Add(() => Model.UserName, "Select at least one.");
        }
    }

    void FormSubmitted()
    {
        var result = service.SignUp(Model);

        if (result.IsSuccess)
        {
            Router.NavigateTo("/Security/Login");
        }
        else
        {
            Messages = (string)result.Response;
        }
    }
    public void Dispose()
    {
        if (editContext is not null)
        {
            editContext.OnValidationRequested -= HandleValidationRequested;
        }
    }
}
